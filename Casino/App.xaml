<Application x:Class="Casino.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Casino"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <Style x:Key="MTBListViewLastWorkingDate" TargetType="{x:Type TextBlock}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding LastWorkingDate}" Value="01.01.0002 00:00">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MTBListViewNextDate" TargetType="{x:Type TextBlock}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding NextDate}" Value="01.01.0002 00:00">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MTBListViewType" TargetType="{x:Type TextBlock}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Type}" Value="0">
                    <Setter Property="Text" Value="Backup" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="1">
                    <Setter Property="Text" Value="Restore" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MBSTListViewCapacity" TargetType="{x:Type TextBlock}">
            <!--Maindeki backup storage tabında bulut verisinde slaş için-->
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsCloud}" Value="false">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FEWListViewItemSize" TargetType="{x:Type TextBlock}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Type}" Value="1">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--original start-->
        <Style TargetType="TabItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Name="Border" BorderThickness="0" BorderBrush="#D7D7D7">
                            <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"          
                                        Margin="10,0,10,4"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#EDF1FB" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="#FBFCFE" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TabItemText" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Calibri"/>
            <Setter Property="FontSize" Value="16"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TabItem}}" Value="True">
                    <Setter Property="Foreground" Value="#FFFFFF"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TabItem}}" Value="False">
                    <Setter Property="Foreground" Value="#FFFFFF"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=TabItem}}" Value="False">
                    <Setter Property="Foreground" Value="DarkGray"/>
                </DataTrigger>

            </Style.Triggers>
        </Style>

        <Style x:Key="NCTTabItemText" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Calibri"/>
            <Setter Property="FontSize" Value="14"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TabItem}}" Value="True">
                    <Setter Property="Foreground" Value="White"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TabItem}}" Value="False">
                    <Setter Property="Foreground" Value="Black"/>
                </DataTrigger>

            </Style.Triggers>
        </Style>

        <Style x:Key="WhiteButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="Border" BorderThickness="1,1,1,1" BorderBrush="#D7D7D7" CornerRadius="5" Background="Transparent">
                            <ContentPresenter x:Name="ContentSite"                                            
                                                        VerticalAlignment="Center"
                                                        HorizontalAlignment="Center"
                                                        ContentSource="Content"          
                                                        Margin="0,0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="LightGray"/>
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#3b7ebb"/>
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#BCE4FF"/>
                                <Setter Property="Foreground" Value="#FF4D4D4D" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BlueButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="Border" BorderThickness="1,1,1,1" BorderBrush="#BCE4FF" CornerRadius="5" Background="#2679C4">
                            <ContentPresenter x:Name="ContentSite"                                            
                                                        VerticalAlignment="Center"
                                                        HorizontalAlignment="Center"
                                                        ContentSource="Content"          
                                                        Margin="0,0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#0095D5"/>
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#27527B"/>
                                <Setter Property="Foreground" Value="#FF4D4D4D" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="LightSlateGray"/>
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="StartButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="Border" BorderThickness="1,1,1,1" BorderBrush="#BCE4FF" CornerRadius="5" Background="#53A850">
                            <ContentPresenter x:Name="ContentSite"                                            
                                                        VerticalAlignment="Center"
                                                        HorizontalAlignment="Center"
                                                        ContentSource="Content"          
                                                        Margin="0,0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#1ED760"/>
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#377035"/>
                                <Setter Property="Foreground" Value="#FF4D4D4D" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="LightSlateGray"/>
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TitleButton" TargetType="{x:Type Button}">
            <Setter Property="FontFamily" Value="Calibri"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="Border" Background="Transparent">
                            <ContentPresenter x:Name="ContentSite"                                            
                                                        VerticalAlignment="Center"
                                                        HorizontalAlignment="Center"
                                                        ContentSource="Content"          
                                                        Margin="0,0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#BCE4FF"/>
                                <Setter Property="Foreground" Value="#FF4D4D4D" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#3367D6"/>
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ArrowUpButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="Border" BorderThickness="1,0,0,0" BorderBrush="#D7D7D7" Background="White">
                            <ContentPresenter x:Name="ContentSite"                                            
                                                        VerticalAlignment="Center"
                                                        HorizontalAlignment="Center"
                                                        ContentSource="Content"          
                                                        Margin="0,0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="LightGray"/>
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="white"/>
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#3367D6"/>
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#BCE4FF"/>
                                <Setter Property="Foreground" Value="#FF4D4D4D" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ArrowDownButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="Border" BorderThickness="1,0,0,0" BorderBrush="#D7D7D7" Background="White">
                            <ContentPresenter x:Name="ContentSite"                                            
                                                        VerticalAlignment="Center"
                                                        HorizontalAlignment="Center"
                                                        ContentSource="Content"          
                                                        Margin="0,0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="LightGray"/>
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="white"/>
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#3367D6"/>
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#BCE4FF"/>
                                <Setter Property="Foreground" Value="#FF4D4D4D" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CreateTaskButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="Border" BorderThickness="1" BorderBrush="#194771" CornerRadius="5" Background="Transparent">
                            <ContentPresenter x:Name="ContentSite"
                                                        VerticalAlignment="Center"
                                                        HorizontalAlignment="Left"
                                                        ContentSource="Content"          
                                                        Margin="0,0"/>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#FF4B9A4E"/>
                                <Setter TargetName="Border" Property="Background" Value="#FF4B9A4E"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#FF4B9A4E"/>
                                <Setter TargetName="Border" Property="Background" Value="#D8ECD1"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#FF4B9A4E"/>
                                <Setter TargetName="Border" Property="Background" Value="#6C7A7B"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ImageButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="Border" BorderThickness="1" BorderBrush="Transparent" CornerRadius="5" Background="Transparent">
                            <ContentPresenter x:Name="ContentSite"
                                                        VerticalAlignment="Center"
                                                        HorizontalAlignment="Center"
                                                        ContentSource="Content"          
                                                        Margin="0,0"/>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border"  Property="BorderBrush" Value="DarkGray"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TitleBarText" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>

        <Style x:Key="CreateTaskButtonText" TargetType="{x:Type TextBlock}">
            <Style.Triggers>
                <!-- -->
                <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=Button}}" Value="True">
                    <Setter Property="Foreground" Value="White"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=Button}}" Value="False">
                    <Setter Property="Foreground" Value="WhiteSmoke"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type TreeViewItem}">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}"
                       Color="DarkGray"/>
            </Style.Resources>
        </Style>

        <Style x:Key="placeHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" 
                                 Background="Transparent" 
                                 Panel.ZIndex="2"
                                 VerticalContentAlignment="Center"/>
                            <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
